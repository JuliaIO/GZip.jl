var documenterSearchIndex = {"docs":
[{"location":"#GZip.jl-A-Julia-interface-for-gzip-functions-in-zlib","page":"Home","title":"GZip.jl --- A Julia interface for gzip functions in zlib","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"::: {.module synopsis=\"Wrapper for gzip functions in zlib\"} GZip :::","category":"page"},{"location":"","page":"Home","title":"Home","text":"This module provides a wrapper for the gzip related functions of (zlib), a free, general-purpose, legally unencumbered, lossless data-compression library. These functions allow the reading and writing of gzip files.","category":"page"},{"location":"#Notes","page":"Home","title":"Notes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This interface is only for gzipped files, not the streaming zlib   compression interface. Internally, it depends on/uses the   streaming interface, but the gzip related functions are higher   level functions pertaining to gzip files only.\nGZipStream{.interpreted-text role=\"class\"} is an implementation   of IO{.interpreted-text role=\"class\"} and can be used virtually   anywhere IO{.interpreted-text role=\"class\"} is used.\nThis implementation mimics the IOStream{.interpreted-text   role=\"class\"} implementation, and should be a drop-in replacement   for IOStream{.interpreted-text role=\"class\"}, with some caveats:\nseekend{.interpreted-text role=\"func\"} and   truncate{.interpreted-text role=\"func\"} are not available\nreaduntil{.interpreted-text role=\"func\"} is available, but   is not very efficient. (But readline{.interpreted-text   role=\"func\"} works fine.)","category":"page"},{"location":"","page":"Home","title":"Home","text":"In addition to open{.interpreted-text role=\"func\"}, gzopen{.interpreted-text role=\"func\"} and gzdopen{.interpreted-text role=\"func\"}, the following IO{.interpreted-text role=\"class\"}/IOStream{.interpreted-text role=\"class\"} functions are supported:","category":"page"},{"location":"","page":"Home","title":"Home","text":"close(){.interpreted-text role=\"func\"}\nflush(){.interpreted-text role=\"func\"}\nseek(){.interpreted-text role=\"func\"}\nskip(){.interpreted-text role=\"func\"}\nposition(){.interpreted-text role=\"func\"}\neof(){.interpreted-text role=\"func\"}\nread(){.interpreted-text role=\"func\"}\nreaduntil(){.interpreted-text role=\"func\"}\nreadline(){.interpreted-text role=\"func\"}\nwrite(){.interpreted-text role=\"func\"}\npeek(){.interpreted-text role=\"func\"}","category":"page"},{"location":"","page":"Home","title":"Home","text":"Due to limitations in zlib, seekend{.interpreted-text role=\"func\"} and truncate{.interpreted-text role=\"func\"} are not available.","category":"page"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"::: function open(fname, [gzmode, [buf_size]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Alias for gzopen{.interpreted-text role=\"func\"}. This is not exported, and must be called using GZip.open{.interpreted-text role=\"func\"}. :::","category":"page"},{"location":"","page":"Home","title":"Home","text":"::: function gzopen(fname, [gzmode, [buf_size]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Opens a file with mode (default \"r\"), setting internal buffer size to bufsize (default `ZDEFAULT_BUFSIZE=8192), and returns a the file as aGZipStream`{.interpreted-text role=\"class\"}.","category":"page"},{"location":"","page":"Home","title":"Home","text":"gzmode must contain one of","category":"page"},{"location":"","page":"Home","title":"Home","text":"+––-+–––––––––––––-+ | > r | > read                    | +––-+–––––––––––––-+ | > w | > write, create, truncate | +––-+–––––––––––––-+ | > a | > write, create, append   | +––-+–––––––––––––-+","category":"page"},{"location":"","page":"Home","title":"Home","text":"In addition, gzmode may also contain","category":"page"},{"location":"","page":"Home","title":"Home","text":"+–––-+–––––––––––––––––––––––––––+ | > x   | > create the file exclusively (fails if file exists) | +–––-+–––––––––––––––––––––––––––+ | > 0-9 | > compression level                                  | +–––-+–––––––––––––––––––––––––––+","category":"page"},{"location":"","page":"Home","title":"Home","text":"and/or a compression strategy:","category":"page"},{"location":"","page":"Home","title":"Home","text":"+––-+––––––––––––––+ | > f | > filtered data            | +––-+––––––––––––––+ | > h | > Huffman-only compression | +––-+––––––––––––––+ | > R | > run-length encoding      | +––-+––––––––––––––+ | > F | > fixed code compression   | +––-+––––––––––––––+","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note that + is not allowed in gzmode.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If an error occurs, gzopen throws a GZError{.interpreted-text role=\"class\"} :::","category":"page"},{"location":"","page":"Home","title":"Home","text":"::: function gzdopen(fd, [gzmode, [buf_size]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Create a GZipStream{.interpreted-text role=\"class\"} object from an integer file descriptor. See gzopen{.interpreted-text role=\"func\"} for gzmode and buf_size descriptions. :::","category":"page"},{"location":"","page":"Home","title":"Home","text":"::: function gzdopen(s, [gzmode, [buf_size]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Create a GZipStream{.interpreted-text role=\"class\"} object from IOStream{.interpreted-text role=\"class\"} s. :::","category":"page"},{"location":"#Types","page":"Home","title":"Types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"::: type GZipStream(name, gzfile, [bufsize, [fd, [s]]])","category":"page"},{"location":"","page":"Home","title":"Home","text":"Subtype of IO{.interpreted-text role=\"class\"} which wraps a gzip stream. Returned by gzopen{.interpreted-text role=\"func\"} and gzdopen{.interpreted-text role=\"func\"}. :::","category":"page"},{"location":"","page":"Home","title":"Home","text":"::: type GZError(err, err_str)","category":"page"},{"location":"","page":"Home","title":"Home","text":"gzip error number and string. Possible error values:","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_OK                No error","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_ERRNO             Filesystem error (consult errno())","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_STREAM_ERROR      Inconsistent stream state","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_DATA_ERROR        Compressed data error","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_MEM_ERROR         Out of memory","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_BUF_ERROR         Input buffer full/output buffer empty","category":"page"},{"location":"","page":"Home","title":"Home","text":"Z_VERSION_ERROR     zlib library version is incompatible                         with caller version   ––––––––––- –––––––––––––––––––– :::","category":"page"}]
}
